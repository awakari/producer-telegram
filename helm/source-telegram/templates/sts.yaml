apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "source-telegram.fullname" . }}
  labels:
    {{- include "source-telegram.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "source-telegram.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "source-telegram.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "source-telegram.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: API_PORT
              value: "{{ .Values.service.portGrpc }}"
            - name: API_TELEGRAM_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ include "source-telegram.fullname" . }}-tokens"
                  key: id
            - name: API_TELEGRAM_HASH
              valueFrom:
                secretKeyRef:
                  name: "{{ include "source-telegram.fullname" . }}-tokens"
                  key: hash
            - name: API_TELEGRAM_PHONE
              valueFrom:
                secretKeyRef:
                  name: "{{ include "source-telegram.fullname" . }}-tokens"
                  key: phone
            - name: API_WRITER_URI
              value: "{{ .Values.api.writer.uri }}"
            - name: DB_URI
              value: "{{ .Values.db.protocol }}://{{ .Values.db.hostname }}/?retryWrites=true&w=majority"
            - name: DB_NAME
              value: {{ .Values.db.name }}
            - name: DB_USERNAME
              value: {{ .Values.db.username }}
            {{- if .Values.db.password.secret.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.db.password.secret.name }}"
                  key: "{{ .Values.db.password.secret.key }}"
            {{- else }}
            - name: DB_PASSWORD
              value: "{{ .Values.db.password.raw }}"
            {{- end }}
            - name: DB_TABLE_NAME
              value: {{ .Values.db.table.name }}
            - name: DB_TABLE_SHARD
              value: "{{ .Values.db.table.shard }}"
            - name: DB_TLS_ENABLED
              value: "{{ .Values.db.tls.enabled }}"
            - name: DB_TLS_INSECURE
              value: "{{ .Values.db.tls.insecure }}"
            - name: LOG_LEVEL
              value: "{{ .Values.log.level }}"
            - name: REPLICA_RANGE
              value: "{{ .Values.replicaCount }}"
            - name: REPLICA_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DB_TABLE_RETENTION
              value: "{{ .Values.db.table.retention }}"
          stdin: true
          tty: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.service.portGrpc }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - ls
          readinessProbe:
            exec:
              command:
                - ls
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: spot
                    operator: In
                    values:
                      - "false"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "source-telegram.name" . }}
              topologyKey: "kubernetes.io/hostname"
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
